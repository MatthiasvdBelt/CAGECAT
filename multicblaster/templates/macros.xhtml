<!--Here we can have code block which are used more than once-->

{% macro prev_session_bs(module, mainInput, job_id) %}
    <div id="{{ '%sPrevJobOptions' % module }}" class="tab-pane fade form-group" >
        <label class="radio-inline"><input type="radio" name="{{'%sPreviousType' % module}}" id="{{'%sPrevJobId' % module}}" value="jobID" checked/>Job ID</label>
        <label class="radio-inline"><input type="radio" name="{{'%sPreviousType' % module}}" id="{{'%sPrevSessFile' % module}}" value="sessionFile"/>Session file</label>
        <div class="form-group form-inline"> {# TODO: style it better with has-succes and has-error #}
            <label for="{{ '%sEnteredJobId' % module }}">Previous job ID</label>
            <input class="form-control" id="{{ '%sEnteredJobId' % module }}" name="{{ '%sEnteredJobId' % module }}"/>
{#            TODO: onfocusout validate entered job ID#}
            <span> or </span>
            <label  for="{{ '%sUploadedSessionFile' % module }}">Session file</label>
            <input type="file" id="{{ '%sUploadedSessionFile' % module }}" name="{{ '%sUploadedSessionFile' % module }}" disabled/>
{#            TODO: put session file in same block as previous job ID input#}
        </div>
    </div>

{% endmacro %}

{% macro prev_session(module, mainInput, job_id, allow_multiple) %}
    <div id="{{ '%sPrevJobOptions' % module }}" style="{{'display: block' if
    mainInput else 'display: none'}}">
        <div>
            <label>
            <input type="radio" name="{{'%sPreviousType' % module}}" id="{{'%sPrevJobId' % module}}" value="jobID" onclick="changePrevSessionType()" checked="checked">Job ID</input>
            </label>

            <label>
                <input type="radio" name="{{'%sPreviousType' % module}}" id="{{'%sPrevSessFile' % module}}" value="sessionFile" onclick="changePrevSessionType()">Session file</input>
            </label>
        </div>
        <label for="{{ '%sEnteredJobId' % module }}">Previous job
            ID</label>
        <input type="text" id="{{ '%sEnteredJobId' % module }}" name="{{ '%sEnteredJobId' % module }}" onfocusout="validateJobID()"
               placeholder="AAAAA" {{ "" if job_id is none else "value=%s" % job_id }} {{ '' if mainInput else 'disabled="disabled"'}}/>

        <span>or</span>
        <label class="file-upload-lbl disabled" id="{{'%sLabelSessionFile' % module }}" for="{{ '%sUploadedSessionFile' % module }}">Session file</label>
        <input type="file"
               id="{{ '%sUploadedSessionFile' % module }}"
               name="{{ '%sUploadedSessionFile' % module }}" {{ "" if not allow_multiple else "multiple=multiple" }} disabled="disabled"/>
    </div>
{% endmacro %}

{% macro result_table(module, type) %}
<div>
    <label class="fieldset-label"  for="{{ '%s%sTableSection' % (module, type) }}">
        {{ 'Summary table' if type == 'Sum' else 'Binary table'}}</label>
    <fieldset id="{{ '%s%sTableSection' % (module, type) }}">
        <div>
            <label class="input-label"
                   for="{{ '%s%sTableDelim' % (module, type) }}">Delimiter</label>
            <input type="text"
                   id="{{ '%s%sTableDelim' % (module, type) }}"
                   name="{{ '%s%sTableDelim' % (module, type) }}" maxlength="1"/>
        </div>
        <div>
            <label class="input-label"
                   for="{{ '%s%sTableDecimals' % (module, type) }}">Decimal places</label>
            <input type="number"
                   id="{{ '%s%sTableDecimals' % (module, type) }}"
                   name="{{ '%s%sTableDecimals' % (module, type) }}" value="2" step="1" min="0"
                   required="required"/>
        </div>
        <div>
            <label>
                <input type="checkbox"
                       id="{{ '%s%sTableHideHeaders' % (module, type) }}"
                       name="{{ '%s%sTableHideHeaders' % (module, type) }}">Hide headers</input>
            </label>
        </div>

        {% if type == 'Bin' %}
        <div>
            <label for="keyFunction">Key function</label>
                <select name="keyFunction" id="keyFunction" required="required" onchange="changeHitAttribute()">
                    <option name="functionLen" value="len">len</option>
                    <option name="functionSum" value="sum">sum</option>
                    <option name="functionMax" value="max">max</option>
                </select>
        </div>

        <div>
            <label for="hitAttribute">Hit attribute</label>
            <select name="hitAttribute" id="hitAttribute" disabled="disabled">
                <option name="hitAttrIdentity" value="identity">identity</option>
                <option name="hitAttrCoverage" value="coverage">coverage</option>
                <option name="hitAttrBitscore" value="bitscore">bitscore</option>
                <option name="hitAttrEValue" value="evalue">e-value</option>
            </select>
        </div>

        {% endif %}
    </fieldset>
</div>
{% endmacro %}

{% macro show_options(settings) %}
<label for="optionsList">Selected options</label>
<ul id="optionsList">
{% for label, option in settings.items() %}
<li>{{label}}: {{option}}</li>

{% endfor %}
</ul>
{% endmacro %}

{% macro filtering_section(extraction_type, selected_scaffolds, selected_queries_or_cluster_numbers) %}
<div>
<label for="filteringSection">Filtering</label>
<fieldset id="filteringSection">
    <div>
        <label for="selectedOrganisms">Organisms</label>
        <input type="text" id="selectedOrganisms" name="selectedOrganisms" placeholder="Organisms to filter for"/>
    </div>
    <div>
        <label for="selectedScaffolds">Scaffolds</label>
        <textarea cols="30" rows="8" id="selectedScaffolds" name="selectedScaffolds" placeholder="Scaffolds to filter for">{{selected_scaffolds if selected_scaffolds is not none}}</textarea>
    </div>

    {% if extraction_type == 'sequences' %}
    <div>
        <label for="selectedQueries">Queries</label>
        <textarea cols="20" rows="8" id="selectedQueries" name="selectedQueries" placeholder="Queries to filter for">{{selected_queries_or_cluster_numbers if selected_queries_or_cluster_numbers is not none}}</textarea>
    </div>
    {% elif extraction_type == 'clusters' %}
    <div>
        <label for="clusterNumbers">Clusters</label>
        <input type="text" name="clusterNumbers" id="clusterNumbers" value="{{selected_queries_or_cluster_numbers}}"/>
<!--        TODO: add pattern for clusternumbers (either separated by space or via stripes)-->
<!--        TODO: check if 1-3 and 6-8 works-->
        <div>
            <label for="clusterScoreThreshold">Score threshold</label>
            <input type="number" step="0.001" name="clusterScoreThreshold" id="clusterScoreThreshold"/>
        </div>
    </div>

    {% endif %}
</fieldset>
</div>
{% endmacro %}

    {% macro create_scientific_input(label, type, default_value) %}

<div>
    <input type="hidden" name="{{type.lower()}}" id="{{type.lower()}}" value=""/>

    <label for="base{{type}}">{{label}}</label>
    <input type="number" id="base{{type}}" step="0.01" min="1" max="9.99" value="1"/>
    <span> E<sup><span id="power{{type}}">{{default_value}}</span></sup></span>
    <button type="button" class="scientificnotation" onclick="changePower(-1, 'power{{type}}')">&#9660</button>
    <button type="button" class="scientificnotation" onclick="changePower(1, 'power{{type}}')">&#9650</button>
</div>

        {% endmacro %}











